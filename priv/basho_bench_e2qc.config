{mode, max}.
{duration, 1}.
{report_interval,1}.
%%%%%%{concurrent, 32}.
{driver, basho_bench_driver_e2qc}.
{code_paths, ["./ebin"]}.

{e2qc_size, 32000111}.
{e2qc_ratio, 0.4}.
%% Val sizes are about 0.31 times larger than the cache.
%{key_generator, {int_to_bin_bigendian, {truncated_pareto_int,    10000}}}.
% %% Val sizes are about 3.1 times larger than the cache.
% {key_generator, {int_to_bin_bigendian, {truncated_pareto_int,   100000}}}.
% %% Val sizes are about 3.1 times larger than the cache.
% {key_generator, {int_to_bin_bigendian, {truncated_pareto_int,  1000000}}}.
% %% Val sizes are about 31 times larger than the cache.
% {key_generator, {int_to_bin_bigendian, {truncated_pareto_int, 10000000}}}.
% %% Val sizes are about 310 times larger than the cache.
{key_generator, {int_to_bin_bigendian, {truncated_pareto_int, 100000009}}}.
{value_generator, {fixed_bin, 1000}}.

%% On SLF's laptop, micro run @ 1 min and _no_ control over other procs
%% running, e.g. Safari and Chrome.
%% {concurrent, 32} and {e2qc_size, 32000111} and {e2qc_ratio, 0.4} and
%% {value_generator, {fixed_bin, 1000}} and {operations, [{cache,1}]}
%%
%% NOTE: These values are running close to basho_bench's measurement
%%       limits ... which is a good thing.  PRs to basho_bench to
%%       push those limits back will be appreciated.  ^_^
%%
%% keys =    10000, tput ~120K ops/sec, mean 0.2 msec, 99.9% 3 msec max 700 msec
%% keys =   100000, tput ~120K ops/sec, mean 0.2 msec, 99.9% 3 msec max 700 msec
%% keys =  1000000, tput ~120K ops/sec, mean 0.1 msec, 99.9% 2 msec max 500 msec
%% keys = 10000000, tput ~ 98K ops/sec, mean 0.1 msec, 99.9% 1 msec max 400 msec
%% {concurrent,4}.
%% keys = 10000000, tput ~150K ops/sec, mean 0.01msec, 99.9% .1msec max  60 msec

{operations, [{cache,1}]}.
